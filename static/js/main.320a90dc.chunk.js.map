{"version":3,"sources":["components/nav/Nav.js","components/search/Search.js","components/countryList/CountryList.js","components/country/Country.js","App.js","index.js"],"names":["Nav","title","isDarkMode","handleDarkMode","className","Search","countryName","onChangeCountryName","filterCountryList","type","placeholder","value","onChange","CountryList","filteredCountryList","clickCountry","map","name","flag","population","region","capital","to","onClick","src","alt","Country","country","fetchBorderCountry","length","currencies","languages","nativeName","topLevelDomain","subregion","borders","lan","join","c","App","useState","data","setData","getCountry","setCountryName","setFilteredCountryList","setIsDarkMode","useEffect","axios","get","then","a","res","e","target","path","borderCountryName","temp","filter","alpha3Code","exact","filteredList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320a90dc.chunk.js","sourcesContent":["/** @format */\r\nimport './nav.css';\r\n// import { IoIosMoon } from 'react-icons/io';\r\nconst Nav = ({ title, isDarkMode, handleDarkMode }) => {\r\n\treturn (\r\n\t\t<nav className='nav'>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t{/* <div className={isDarkMode ? 'dark-mode' : 'light-mode'} onClick={handleDarkMode}>\r\n\t\t\t\t<IoIosMoon />\r\n\t\t\t\tDark Mode\r\n\t\t\t</div> */}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","/** @format */\r\nimport { IoIosSearch } from 'react-icons/io';\r\nimport './Search.css';\r\nconst Search = ({ countryName, onChangeCountryName, filterCountryList }) => {\r\n\treturn (\r\n\t\t<section className='search-container'>\r\n\t\t\t<div className='search-input'>\r\n\t\t\t\t<IoIosSearch className='search-icon' />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Search for a country'\r\n\t\t\t\t\tvalue={countryName}\r\n\t\t\t\t\tonChange={onChangeCountryName}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<select className='filter-list' onChange={filterCountryList}>\r\n\t\t\t\t<option value='All'>Filter by Region</option>\r\n\t\t\t\t<option value='Africa'>Africa</option>\r\n\t\t\t\t<option value='Americas'>America</option>\r\n\t\t\t\t<option value='Asia'>Asia</option>\r\n\t\t\t\t<option value='Europe'>Europe</option>\r\n\t\t\t\t<option value='Oceania'>Oceania</option>\r\n\t\t\t</select>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","/** @format */\r\nimport './CountryList.css';\r\nimport Search from '../search/Search';\r\nimport { Link } from 'react-router-dom';\r\nconst CountryList = ({\r\n\tfilteredCountryList,\r\n\tclickCountry,\r\n\tcountryName,\r\n\tonChangeCountryName,\r\n\tfilterCountryList,\r\n}) => {\r\n\treturn (\r\n\t\t<section className='country-list'>\r\n\t\t\t<Search\r\n\t\t\t\tcountryName={countryName}\r\n\t\t\t\tonChangeCountryName={onChangeCountryName}\r\n\t\t\t\tfilterCountryList={filterCountryList}\r\n\t\t\t/>\r\n\t\t\t<ul>\r\n\t\t\t\t{filteredCountryList.map(({ name, flag, population, region, capital }) => (\r\n\t\t\t\t\t<Link key={name} to='/country'>\r\n\t\t\t\t\t\t<li key={name} onClick={() => clickCountry(name)} className='item'>\r\n\t\t\t\t\t\t\t<img src={flag} alt='Country Flag' />\r\n\t\t\t\t\t\t\t<h1>{name}</h1>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Population:</span> {population}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Region:</span> {region}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span>Capital:</span> {capital}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default CountryList;\r\n","/** @format */\r\nimport './Country.css';\r\nimport { Link } from 'react-router-dom';\r\nconst Country = ({ country, fetchBorderCountry }) => {\r\n\tif (country.length > 0)\r\n\t\treturn (\r\n\t\t\t<section className='country-container'>\r\n\t\t\t\t<Link to='/countries-api'>\r\n\t\t\t\t\t<button className='back-btn'>Back</button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t{country.map(\r\n\t\t\t\t\t({\r\n\t\t\t\t\t\tflag,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tcapital,\r\n\t\t\t\t\t\tregion,\r\n\t\t\t\t\t\tpopulation,\r\n\t\t\t\t\t\tcurrencies,\r\n\t\t\t\t\t\tlanguages,\r\n\t\t\t\t\t\tnativeName,\r\n\t\t\t\t\t\ttopLevelDomain,\r\n\t\t\t\t\t\tsubregion,\r\n\t\t\t\t\t\tborders,\r\n\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t<article key={capital} className='country'>\r\n\t\t\t\t\t\t\t<img src={flag} alt='Country Flag' />\r\n\t\t\t\t\t\t\t<div className='country-info'>\r\n\t\t\t\t\t\t\t\t<h1 className='title'>{name}</h1>\r\n\t\t\t\t\t\t\t\t<div className='flex-info'>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Native Name: </b>\r\n\t\t\t\t\t\t\t\t\t\t{nativeName}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Population: </b>\r\n\t\t\t\t\t\t\t\t\t\t{population}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Region: </b>\r\n\t\t\t\t\t\t\t\t\t\t{region}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Sub Region: </b>\r\n\t\t\t\t\t\t\t\t\t\t{subregion}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Capital: </b>\r\n\t\t\t\t\t\t\t\t\t\t{capital}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Top Level Domain: </b>\r\n\t\t\t\t\t\t\t\t\t\t{topLevelDomain}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Currencies: </b>\r\n\t\t\t\t\t\t\t\t\t\t{currencies[0].name}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<b>Languages: </b>\r\n\t\t\t\t\t\t\t\t\t\t{languages.map((lan) => lan.name).join(', ')}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className='border-countries'>\r\n\t\t\t\t\t\t\t\t\t<b>Border Countries: </b>\r\n\t\t\t\t\t\t\t\t\t{borders.map((c) => (\r\n\t\t\t\t\t\t\t\t\t\t<button key={c} className='border-btn' onClick={() => fetchBorderCountry(c)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{c}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t);\r\n\treturn null;\r\n};\r\n\r\nexport default Country;\r\n","/** @format */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Nav from './components/nav/Nav';\r\nimport './App.css';\r\nimport CountryList from './components/countryList/CountryList';\r\nimport Country from './components/country/Country';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nconst App = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [country, getCountry] = useState('');\r\n\tconst [countryName, setCountryName] = useState('');\r\n\tconst [filteredCountryList, setFilteredCountryList] = useState([]);\r\n\tconst [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get('https://restcountries.com/v2/all').then(data => {\r\n\t\t\tsetData(data.data);\r\n\t\t\tsetFilteredCountryList(data.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\t// Methods!!!\r\n\tconst clickCountry = async countryName => {\r\n\t\tlet data = await axios\r\n\t\t\t.get(\r\n\t\t\t\t`\r\nhttps://restcountries.com/v2/name/${countryName}`\r\n\t\t\t)\r\n\t\t\t.then(res => res);\r\n\t\tgetCountry(data.data);\r\n\t};\r\n\t//Seacrh Method!\r\n\tconst onChangeCountryName = async e => {\r\n\t\tsetCountryName(e.target.value);\r\n\t\tlet data = await axios\r\n\t\t\t.get(`https://restcountries.com/v2/name/${countryName}`)\r\n\t\t\t.then(res => res);\r\n\t\tsetFilteredCountryList(data.data);\r\n\t};\r\n\t//fetch border country\r\n\tconst fetchBorderCountry = borderCountryName => {\r\n\t\tlet temp = data.filter(name => name.alpha3Code === borderCountryName);\r\n\t\tgetCountry(temp);\r\n\t};\r\n\t//filter country\r\n\tconst filterCountryList = e => {\r\n\t\tif (e.target.value === 'All') {\r\n\t\t\treturn setFilteredCountryList(data);\r\n\t\t}\r\n\t\tlet filteredList = data.filter(\r\n\t\t\tcountry => country.region === e.target.value\r\n\t\t);\r\n\t\tsetFilteredCountryList(filteredList);\r\n\t};\r\n\t//handle dark mode\r\n\tconst handleDarkMode = () => {\r\n\t\tsetIsDarkMode(!isDarkMode);\r\n\t};\r\n\treturn (\r\n\t\t<article className='app-container'>\r\n\t\t\t<header className='header'>\r\n\t\t\t\t<Nav\r\n\t\t\t\t\ttitle='Where in the world?'\r\n\t\t\t\t\tisDarkMode={isDarkMode}\r\n\t\t\t\t\thandleDarkMode={handleDarkMode}\r\n\t\t\t\t/>\r\n\t\t\t</header>\r\n\t\t\t<section className='countryList-container'>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/country'>\r\n\t\t\t\t\t\t\t<Country\r\n\t\t\t\t\t\t\t\tcountry={country}\r\n\t\t\t\t\t\t\t\tfetchBorderCountry={fetchBorderCountry}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path='/countries-api'>\r\n\t\t\t\t\t\t\t<CountryList\r\n\t\t\t\t\t\t\t\tfilteredCountryList={filteredCountryList}\r\n\t\t\t\t\t\t\t\tclickCountry={clickCountry}\r\n\t\t\t\t\t\t\t\tcountryName={countryName}\r\n\t\t\t\t\t\t\t\tonChangeCountryName={onChangeCountryName}\r\n\t\t\t\t\t\t\t\tfilterCountryList={filterCountryList}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</section>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}